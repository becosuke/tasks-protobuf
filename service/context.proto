syntax = "proto3";

package service.context;

option go_package = "github.com/becosuke/tasks-api/protogen/service/context";

import "google/api/annotations.proto";
import "message/context.proto";

service context {
  rpc Create (.message.context.CreateRequest) returns (.message.context.CreateResponse) {
    option (google.api.http) = {
      post: "/v1/context"
      body: "*"
    };
  }
  rpc Update (.message.context.UpdateRequest) returns (.message.context.UpdateResponse) {
    option (google.api.http) = {
      put: "/v1/context/{id}"
      body: "*"
    };
  }
  rpc Delete (.message.context.DeleteRequest) returns (.message.context.DeleteResponse) {
    option (google.api.http) = {
      delete: "/v1/context/{id}"
    };
  }
  rpc GetDocument(.message.context.GetDocumentRequest) returns (.message.context.GetDocumentResponse) {
    option (google.api.http) = {
      get: "/v1/context/{id}"
    };
  }
  rpc GetDocuments(.message.context.GetDocumentsRequest) returns (.message.context.GetDocumentsResponse) {
    option (google.api.http) = {
      get: "/v1/contexts/document/{ids}"
    };
  }
  rpc GetDocumentsAll (.message.context.GetDocumentsAllRequest) returns (.message.context.GetDocumentsAllResponse) {
    option (google.api.http) = {
      get: "/v1/contexts/all"
    };
  }
  rpc GetCountAll (.message.context.GetCountAllRequest) returns (.message.context.GetCountAllResponse) {
    option (google.api.http) = {
      get: "/v1/contexts/all/count"
    };
  }
}
